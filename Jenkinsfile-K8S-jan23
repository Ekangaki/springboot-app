pipeline {
    agent any
    tools {
        maven 'Maven3'
    }
    environment {
        registry = "604310316623.dkr.ecr.us-east-1.amazonaws.com/springboot"
        ecrRepoUrl = "604310316623.dkr.ecr.us-east-1.amazonaws.com/springboot"
    }
    stages {
        stage('AIT Git Clone') {
            steps {
                script {
                    checkout([$class: 'GitSCM', branches: [[name: 'main']], userRemoteConfigs: [[url: 'https://github.com/Ekangaki/springboot-app.git']]])
                }
            }
        }

        stage("AIT Maven Build") {
            steps {
                script {
                    sh "mvn clean install"
                }
            }
        }

        stage('AIT Building image') {
            steps {
                script {
                    dockerImage = docker.build registry
                }
            }
        }

        stage('AIT Push into ECR') {
            steps {
                script {
                    sh "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ecrRepoUrl"
                    sh "docker push $ecrRepoUrl:latest"
                }
            }
        }

        stage('K8S Deploy') {
            steps {
                script {
                    withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'K8S-Credentials', namespace: '', restrictKubeConfigAccess: false, serverUrl: '') {
                        sh ('kubectl apply -f eks-deploy-from-ecr.yaml')
                    }
                }
            }
        }
    }
}
